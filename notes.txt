commit: A commit records the state of the projectâ€™s files at the moment the commit is made. It includes all staged changes in the working directory.
staging area: In Git, the staging area (also known as the index) is an intermediate space where you can prepare changes before committing them to the repository.

git init -->> initializes repository in our folder it will track the changes made to our file 
              created repo is of .git expansion and is hidden 

git status -->> it shows current status of working directory files that are not staged(who's history is not being tracked), untracked  files etc.

git add file_name -->> this command stages a specific file, preparing it to be added in next commit 
git add. -->> this command stages all changes in the current directory and sub directory adding them to staging area 
              this is way of staging the file for next commit we need to stage file every time we want to commit the change 

git commit -m "message to be attached" : this command shall commit a change to current working directory to our locally created repo

cat file_name-->> can display content of your file

git restore --staged file_name -->> this command removes specifed filed from staging area effectively unstaging it changes shall remain in directory but wont show on
next commit 
git log -->> this command displays all the commits made in the current working directory 


git reset <hash id> -->> this command unstages all the commits made after the mentioned hash id however changes made to working directory
                        shall remain as it is

git stash -->> this command saves your uncommitted changes (both staged and unstaged) into a stack-like storage, allowing you to work on something else without 
               losing your progress, this shall also remove the un comiited changes from current working directory and store evrything in stash 

git stash pop -->> this will bring data back from stash to working directory 

git stash clear -->> this will clear all the data stored in our stash 

git remote add origin <link> --> this command links your local Git repository to a remote repository on GitHub
git push origin main -->> this commands pushes your project to remote GitHub repository
origin is the name typically given to main remote repository but you can name it anything

git branch -->> this command  shows a list of all the branches in your local/ remote repository and highlights the current branch with an asterisk (*).